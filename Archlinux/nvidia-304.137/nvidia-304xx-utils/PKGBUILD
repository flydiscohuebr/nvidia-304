# Contributor: Andreas Radke <andyrtr@archlinux.org>
# Maintainer: Philip MÃ¼ller <philm[at]manjaro[dog]org>
# Maintainer: Roland Singer <roland[at]manjaro[dog]org>

pkgbase=nvidia-304xx-utils
pkgname=('nvidia-304xx-utils' 'opencl-nvidia-304xx' 'nvidia-304xx-dkms')
pkgver=304.137
pkgrel=6
arch=('x86_64')
url="http://www.nvidia.com/"
makedepends=("patchelf")
license=('custom')
options=('!strip')
source=('nvidia-drm-outputclass.conf' 'nvidia-utils.sysusers' '0001-disable-mtrr-4.3.patch' '0002-pud-offset-4.12.patch'
'0003-nvidia-drm-pci-init-4.14.patch' '0004-timer-4.15.patch' '0005-usercopy-4.16.patch' '0006-do_gettimeofday-5.0.patch'
'0007-subdirs-5.3.patch' '0008-on-each-cpu-5.3.patch' '0009-remove-drmp-5.5.patch' '0010-proc-ops-5.6.patch'
'0011-kernel-5.7.0-setmemoryarray.patch' '0012-kernel5.8.patch' '0013-kernel5.9.patch'
'0014-import-drm_legacy_pci_init-exit-from-src-linux-5.9.1.patch'
'0015-add-static-and-nv_-prefix-to-copied-drm-legacy-bits.patch' '0016-fix-mistake.patch' '0016-vmalloc5.9.patch'
'0017-patch-14-kernel-5.11.patch' '0018-kernel5.14.patch' '0019-kernel-5.16.patch' '0020-kernel-5.17.patch' '0021-kernel-5.18.patch'
'0022-kernel-6.0.patch' '0023-kernel-6.2.patch' '0024-kernel-6.3.patch'
'0025-kernel-6.5.patch' '0026-gcc14-fix.patch' '0027-failfast.patch' '0028-gcc15-fix.patch' '0029-kernel-6.15.patch')
source_x86_64=("http://us.download.nvidia.com/XFree86/Linux-x86_64/${pkgver}/NVIDIA-Linux-x86_64-${pkgver}-no-compat32.run")
md5sums=('768a64259f7e8d8a46a13b876d6c443c'
         '3d2894e71d81570bd00bce416d3e547d'
         'e703f2eed605bd12c3665d0d64cf6198'
         '21a161409c9cdba66723f67e3d481b62'
         'cd96685ea2021d00e4bef5bff6ee836f'
         '7bd80b2123f87b24c5cf6ad1076c0eac'
         '0a9624e40abc976b5d775450fb5f3f89'
         '2b1e2bba05e47609f27a7fb6350f8758'
         '843484b2338446f89e7797ca2737fb4c'
         '2b456e376c0635bcde262d801449a712'
         '61427238488b5ea2c637ff1955183872'
         '52c5878635dce177be611dd51796acd6'
         '20959653a4868e0cc91e079f4d3cfbbb'
         '13ccc788dcc219abea39385c6fd0be3b'
         '4ddb9debdba3a643e28c91622c9dfe30'
         'a59a54e37be597282b3092cff130982a'
         '95dd72b7785b7d1d8e6a6a3a4960babf'
         '8ac0bfb5b3bc37bcd87b4096309076a0'
         'd622fb50b7943ccc7ef988349b005115'
         '6f6142a570f22de45bf2d86bc6fafeec'
         'b4580623479c0692f05dfbe4c3219ee2'
         '3b2aaeb3e7a293559da052f886e22086'
         '438327efc2d8c57b3ff7b3868efbe3d4'
         '5b00988b72405c85e08cd22f71433d6d'
         '6064fe8e79a221db4150a96cbea662ea'
         '8b9a113503194cb049d8392fa62807aa'
         'b76f09ca591bad194e86de5a43479bcd'
         '9f5c4f68ed3b5c4f491b13782f8300d3'
         '2a82551b33568cc676ca91d898445a43'
         '87ba291565a82788ac0c0dfd16ec1590'
         'b69b946e002eb21b04b3fd33862c6de6'
         'b69b946e002eb21b04b3fd33862c6de6')
md5sums_x86_64=('485506ee6a7c54780488dacddf1d56b1')

[[ "$CARCH" = "x86_64" ]] && _pkg="NVIDIA-Linux-x86_64-${pkgver}-no-compat32"

create_links() {
    # create soname links
    find "$pkgdir" -type f -name '*.so*' ! -path '*xorg/*' -print0 | while read -d $'\0' _lib; do
        _soname=$(dirname "${_lib}")/$(readelf -d "${_lib}" | grep -Po 'SONAME.*: \[\K[^]]*' || true)
        _base=$(echo ${_soname} | sed -r 's/(.*).so.*/\1.so/')
        [[ -e "${_soname}" ]] || ln -s $(basename "${_lib}") "${_soname}"
        [[ -e "${_base}" ]] || ln -s $(basename "${_soname}") "${_base}"
    done
}

prepare() {
  cd "${srcdir}"
  rm -rf "$_pkg"
  sh "${_pkg}.run" --extract-only
  cd "${_pkg}"

  # patches here
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = 0*.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  #"If you are using a Linux 2.4 kernel, please make sure";
  #"you either have configured kernel sources matching your";
  #"kernel or the correct set of kernel headers installed";
  #"on your system.";

  #"If you are using a Linux 2.6 kernel, please make sure";
  #"you have configured kernel sources matching your kernel";
  #"installed on your system. If you specified a separate";
  #"output directory using either the \"KBUILD_OUTPUT\" or";
  #"the \"O\" KBUILD parameter, make sure to specify this";
  #"directory with the SYSOUT environment variable or with";
  #"the equivalent nvidia-installer command line option.";

  #"Depending on where and how the kernel sources (or the";
  #"kernel headers) were installed, you may need to specify";
  #"their location with the SYSSRC environment variable or";
  #"the equivalent nvidia-installer command line option.";

  #"*** Unable to determine the target kernel version. ***";
  rm kernel/makefile
  rm kernel/Makefile.nvidia
  mv kernel/Makefile.kbuild kernel/Makefile

  cp -a kernel kernel-dkms
}

package_nvidia-304xx-dkms(){
    depends=("dkms" "nvidia-304xx-utils")
    install="nvidia.install"

    cd "${_pkg}"
    install -dm 755 "${pkgdir}"/usr/src
    cp -dr --no-preserve='ownership' kernel-dkms "${pkgdir}/usr/src/nvidia-${pkgver}"
}

package_opencl-nvidia-304xx() {
    pkgdesc="OpenCL implemention for NVIDIA, 304xx legacy branch"
    depends=('zlib')
    optdepends=('opencl-headers: headers necessary for OpenCL development')
    provides=('opencl-nvidia' 'opencl-nvidia-legacy' 'opencl-driver' "opencl-nvidia-304xx=$pkgver")
    replaces=('opencl-nvidia-legacy')
 
    cd "${srcdir}/${_pkg}"

    # OpenCL
    install -D -m644 nvidia.icd "${pkgdir}/etc/OpenCL/vendors/nvidia.icd"
    install -D -m755 "libnvidia-compiler.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-compiler.so.${pkgver}"
    install -D -m755 "libnvidia-opencl.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-opencl.so.${pkgver}" 

    create_links
}

package_nvidia-304xx-utils() {
    pkgdesc="NVIDIA drivers utilities and libraries, 304xx legacy branch"
    depends=('libxvmc' 'mesa' 'xorg-server<1.20' 'xorg-server-common<1.20')
    optdepends=('gtk2: nvidia-settings'
                'pkg-config: nvidia-xconfig'
                'opencl-nvidia-304xx: OpenCL support')
    conflicts=('nvidia-utils' 'nvidia-legacy-utils' 'nvidia-304xx-libgl')
    provides=('nvidia-utils' 'nvidia-legacy-utils' 'nvidia-304xx-libgl' "nvidia-304xx-utils=$pkgver")
    replaces=('nvidia-legacy-utils' 'nvidia-304xx-libgl')
    install="${pkgname}.install"

    cd "${srcdir}/${_pkg}"

    patchelf --add-needed libpthread.so.0 "tls/libnvidia-tls.so.${pkgver}"

    # X driver
    install -D -m755 nvidia_drv.so "${pkgdir}/usr/lib/xorg/modules/drivers/nvidia_drv.so"

    # GLX extension module for X
    install -D -m755 "libglx.so.${pkgver}" "${pkgdir}/usr/lib/nvidia/xorg/libglx.so.${pkgver}"
    ln -s "libglx.so.${pkgver}" "${pkgdir}/usr/lib/nvidia/xorg/libglx.so.1"	# X doesn't find glx otherwise
    ln -s "libglx.so.${pkgver}" "${pkgdir}/usr/lib/nvidia/xorg/libglx.so"	# X doesn't find glx otherwise
    #ln -s "nvidia/xorg/libglx.so.${pkgver}" "${pkgdir}/usr/lib/libGLX_indirect.so.0"

    # OpenGL library
    install -D -m755 "libGL.so.${pkgver}" "${pkgdir}/usr/lib/nvidia/libGL.so.${pkgver}"

    # We have to provide symlinks to mesa, as nvidia 304xx doesn't ship them
    ln -s /usr/lib/libEGL_mesa.so.0.0.0 "${pkgdir}/usr/lib/nvidia/libEGL.so.1.0.0"
    #ln -s /usr/lib/libGLESv1_CM.so.1.0.0 "${pkgdir}/usr/lib/nvidia/libGLESv1_CM.so.1.0.0"
    #ln -s /usr/lib/libGLESv2.so.2.0.0 "${pkgdir}/usr/lib/nvidia/libGLESv2.so.2.0.0"

    # OpenGL core library
    install -D -m755 "libnvidia-glcore.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-glcore.so.${pkgver}"

    # XvMC
    install -D -m755 "libXvMCNVIDIA.so.${pkgver}" "${pkgdir}/usr/lib/libXvMCNVIDIA.so.${pkgver}"

    # VDPAU
    install -D -m755 "libvdpau_nvidia.so.${pkgver}" "${pkgdir}/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}"

    # nvidia-tls library
    install -D -m755 "tls/libnvidia-tls.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-tls.so.${pkgver}"
    install -D -m755 "libnvidia-cfg.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-cfg.so.${pkgver}"
    install -D -m755 "libnvidia-ml.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-ml.so.${pkgver}"

    # CUDA
    install -D -m755 "libcuda.so.${pkgver}" "${pkgdir}/usr/lib/libcuda.so.${pkgver}"
    install -D -m755 "libnvcuvid.so.${pkgver}" "${pkgdir}/usr/lib/libnvcuvid.so.${pkgver}"

    # nvidia-xconfig
    install -D -m755 nvidia-xconfig "${pkgdir}/usr/bin/nvidia-xconfig"
    install -D -m644 nvidia-xconfig.1.gz "${pkgdir}/usr/share/man/man1/nvidia-xconfig.1.gz"

    # nvidia-settings
    install -D -m755 nvidia-settings "${pkgdir}/usr/bin/nvidia-settings"
    install -D -m644 nvidia-settings.1.gz "${pkgdir}/usr/share/man/man1/nvidia-settings.1.gz"
    install -D -m644 nvidia-settings.desktop "${pkgdir}/usr/share/applications/${pkgbase%%-utils}-settings.desktop"
    install -D -m644 nvidia-settings.png "${pkgdir}/usr/share/pixmaps/nvidia-settings.png"
    sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i "${pkgdir}/usr/share/applications/${pkgbase%%-utils}-settings.desktop"

    # nvidia-bug-report
    install -D -m755 nvidia-bug-report.sh "${pkgdir}/usr/bin/nvidia-bug-report.sh"

    # nvidia-smi
    install -D -m755 nvidia-smi "${pkgdir}/usr/bin/nvidia-smi"
    install -D -m644 nvidia-smi.1.gz "${pkgdir}/usr/share/man/man1/nvidia-smi.1.gz"

    install -D -m644 LICENSE "${pkgdir}/usr/share/licenses/nvidia/LICENSE"
    ln -s nvidia "${pkgdir}/usr/share/licenses/nvidia-utils"
    install -D -m644 README.txt "${pkgdir}/usr/share/doc/nvidia/README"
    install -D -m644 NVIDIA_Changelog "${pkgdir}/usr/share/doc/nvidia/NVIDIA_Changelog"
    ln -s nvidia "${pkgdir}/usr/share/doc/nvidia-utils"

    # distro specific files must be installed in /usr/share/X11/xorg.conf.d
    install -m755 -d "${pkgdir}/usr/share/X11/xorg.conf.d"
    install -m644 "${srcdir}/nvidia-drm-outputclass.conf" "${pkgdir}/usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf"

    install -dm 755 "${pkgdir}"/etc/ld.so.conf.d
    echo -e '/usr/lib/nvidia/' > "${pkgdir}"/etc/ld.so.conf.d/00-nvidia.conf

    install -Dm644 "${srcdir}/nvidia-utils.sysusers" "${pkgdir}/usr/lib/sysusers.d/$pkgname.conf"

    create_links
}

